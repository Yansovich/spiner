$squareWidth: 100px;

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    height: 100vh;
}

@mixin translate ($posX: -50%, $posY: -50%, $deg: 0) {
    transform: translate($posX, $posY) rotate($deg + deg);
}

@mixin relativeCenter($posX: 50%, $posY: 50%) {
    position: relative;
    top: $posX;
    left: $posY;
    @include translate()
}

.square {
    width: $squareWidth;
    height: $squareWidth;
    background-color: red;
    transition: all 3s ease-in;
    @include relativeCenter ();

    &__tringle {
        width:0;
        height:0;
        border-left: $squareWidth / 2 solid transparent;
        border-right: $squareWidth / 2 solid transparent;
        border-bottom: $squareWidth solid blue;
        position: absolute;
        top: 0;
        left: 0;
        transition: all 1s ease-out;
    
        &_top {
            transform: rotate(0deg);
        }
    
        &_right {
            transform: rotate(90deg);
        }
        
        &_bottom {
            transform: rotate(180deg);
        }
    
        &_left {
            transform: rotate(-90deg);
        }
    }  

    input {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        z-index: 1;
    }

    &:has(input:checked) {
        background-color: blueviolet;
        animation: around 3s normal infinite linear;

        .square__tringle {
            border-bottom: $squareWidth solid blueviolet;
            
            &_top {
                @include translate (0, -100%, 0)
            }

            &_right {
                @include translate (100%, 0, 90);
            }

            &_bottom {
                @include translate (0, 100%, 180);
            }

            &_left {
                @include translate (-100%, 0, -90);
            }
        }
    }
}

@keyframes around {
    0% {
        border-radius: 0%;
        @include translate(-50%, -50%, 0);
    }

    25% {
        border-radius: 25%;
        @include translate(-50%, -50%, 90);
    }

    50% {
        border-radius: 50%;
        @include translate(-50%, -50%, 180);
    }

    75% {
        border-radius: 25%;
        @include translate(-50%, -50%, 270);
    }

    100% {
        border-radius: 50%;
        @include translate(-50%, -50%, 360);
    }

    // from {
    //     border-radius: 0%;
    //     @include translate(-50%, -50%, 0);
    // }

    // to {
    //     border-radius: 50%;
    //     @include translate(-50%, -50%, 360); 
    // }

    }